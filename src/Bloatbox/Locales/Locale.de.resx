<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnAdd" xml:space="preserve">
    <value>Hinzufügen &gt;</value>
  </data>
  <data name="BtnAddAll" xml:space="preserve">
    <value>Alle hinzufügen &gt;&gt;</value>
  </data>
  <data name="BtnRemove" xml:space="preserve">
    <value>&lt; Entfernen </value>
  </data>
  <data name="BtnRemoveAll" xml:space="preserve">
    <value>&lt;&lt; Alle entfernen</value>
  </data>
  <data name="BtnRunUninstaller" xml:space="preserve">
    <value>Papierkorb leeren</value>
  </data>
  <data name="ChkShowUWPSystem" xml:space="preserve">
    <value>System-Apps anzeigen</value>
  </data>
  <data name="infoApp" xml:space="preserve">
    <value>

Deinstalliert Windows 10-Bloatware-Anwendungen.

Angedacht als Erweiterung für github.com/builtbybel/privatezilla

Alle Infos und Credits zu dem Projekt auf
\tgithub.com/builtbybel/bloatbox

Sie können mir außerdem folgen auf
\ttwitter.com/builtbybel

(C) 2021, Builtbybel</value>
  </data>
  <data name="infoPS" xml:space="preserve">
    <value>Dadurch wird die PowerShell-basierte Community-Version "Windows10Debloater.ps1" heruntergeladen\n\nDies ist ein interaktives Skript mit Eingabeaufforderungen, das die folgenden Funktionen ausführt:\n- Windows 10 entschlacken (eine Liste der entfernten Bloatware kann im GitHub-Repository des Autors angezeigt werden)\n- Entfernt übrig gebliebene Registrierungsschlüssel, die den Bloatware-Apps zugeordnet sind\n- Schützt die Privatsphäre, indem es einige Telemetriefunktionen stoppt, verhindert das Cortana als Suchindex verwendet wird, deaktiviert nicht benötigte geplante Aufgaben und vieles mehr\n- Stop-EdgePDF\n\nWollen Sie fortfahren?\n\nWeitere Informationen zu diesem Skript finden Sie hier https://github.com/Sycnex/Windows10Debloater</value>
  </data>
  <data name="infoUninstallNull" xml:space="preserve">
    <value>Keine Apps zum deinstallieren gefunden.</value>
  </data>
  <data name="LblHeader" xml:space="preserve">
    <value>Apps und Features</value>
  </data>
  <data name="LblInstalledCount" xml:space="preserve">
    <value>Apps</value>
  </data>
  <data name="LblLeftAppName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LblRemoveCount" xml:space="preserve">
    <value>Papierkorb</value>
  </data>
  <data name="LblRightAppName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LblRightInfo" xml:space="preserve">
    <value>Schiebe alle was weg soll in den Papierkorb</value>
  </data>
  <data name="LnkHeader" xml:space="preserve">
    <value>Optionales feature (Community Version herunterladen)</value>
  </data>
  <data name="LnkStartFresh" xml:space="preserve">
    <value>Sauberer Start (empfohlene Bloatware entfernen)</value>
  </data>
  <data name="menuCheckRelease" xml:space="preserve">
    <value>Nach Updates suchen</value>
  </data>
  <data name="menuInfoApp" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="menuMarketplace" xml:space="preserve">
    <value>Marktplatz besuchen</value>
  </data>
  <data name="menuPS" xml:space="preserve">
    <value>Weitere features hinzufügen...</value>
  </data>
  <data name="menuRepository" xml:space="preserve">
    <value>github/bloatbox</value>
  </data>
  <data name="msgDoPS" xml:space="preserve">
    <value>Wollen Sie dieses Skript wirklich ausführen?</value>
  </data>
  <data name="msgShowUWPSystem" xml:space="preserve">
    <value>Vorsicht ist geboten beim deinstallieren von Systemanwendungen!\n\nSie können die meisten integrierten Apps deinstallieren, auch solche, die normalerweise keine Option zum Deinstallieren bieten.\n\nHinweis, Bloatbox lässt es jedoch nicht zu einige der integrierten Apps wie Microsoft Edge, .NET Framework, UI.Xaml usw. zu entfernen, da diese Apps für das Windows 10 "Nutzererlebnis" und für andere Programme benötigt werden. Wenn Sie es versuchen, wird eine Fehlermeldung angezeigt, die besagt, dass das Entfernen fehlgeschlagen ist.</value>
  </data>
  <data name="msgStartFresh" xml:space="preserve">
    <value>Dadurch werden unnütze Apps in den Bereinigungsvorgang aufgenommen, die im Standardlieferumfang von Windows enthalten sind.\n\nEs bleibt Ihnen aber frei überlassen, ob Sie alle Apps entfernen oder etwaige vom Bereinigungsvorgang ausschließen und Sie aus dem Papierkorb rausnehmen.</value>
  </data>
  <data name="msgWarning" xml:space="preserve">
    <value>Warnung</value>
  </data>
  <data name="releaseUnofficial" xml:space="preserve">
    <value>Sie benutzen eine inoffizielle Version von Bloatbox</value>
  </data>
  <data name="releaseUpdateAvailable" xml:space="preserve">
    <value>Eine neue Version ist verfügbar</value>
  </data>
  <data name="releaseUpdateAvailableURL" xml:space="preserve">
    <value>\n\nWollen sie die @github/releases Seite öffnen?</value>
  </data>
  <data name="releaseUpdateYourVersion" xml:space="preserve">
    <value>\n\nSie benutzen die Version</value>
  </data>
  <data name="releaseUpToDate" xml:space="preserve">
    <value>Es sind keine neuen Updates verfügbar</value>
  </data>
  <data name="statusDoUninstall" xml:space="preserve">
    <value>Entferne</value>
  </data>
  <data name="statusFailedRemove" xml:space="preserve">
    <value>Fehlgeschlagen:</value>
  </data>
  <data name="statusSuccessRemove" xml:space="preserve">
    <value>Erfolgreich entfernt:</value>
  </data>
</root>