<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnAdd" xml:space="preserve">
    <value>Add selected &gt;</value>
  </data>
  <data name="BtnAddAll" xml:space="preserve">
    <value>Add all &gt;&gt;</value>
  </data>
  <data name="BtnRemove" xml:space="preserve">
    <value>&lt; Remove selected</value>
  </data>
  <data name="BtnRemoveAll" xml:space="preserve">
    <value>&lt;&lt; Remove all</value>
  </data>
  <data name="BtnRunUninstaller" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="ChkShowUWPSystem" xml:space="preserve">
    <value>Show system apps</value>
  </data>
  <data name="infoApp" xml:space="preserve">
    <value>

Remove Bloatwares from Windows 10.

This project was intended as an extension for github.com/builtbybel/privatezilla

All infos and credits about this project on
\tgithub.com/builtbybel/bloatbox

You can also reach out to me on
\ttwitter.com/builtbybel

(C) 2021, Builtbybel</value>
  </data>
  <data name="infoPS" xml:space="preserve">
    <value>This will download the PowerShell based Community version "Windows10Debloater.ps1\n\nThis is a interactive script with prompts which runs the following functions:\n- Debloat (a list of Bloatware that is removed can be viewed on the authors GitHub repository)\n- Removes registry keys leftover that are associated with the bloatware apps\n- Protect privacy by stopping some telemetry functions, stops Cortana from being used as your Search Index, disables unneccessary scheduled tasks, and more\n- Stop-EdgePDF\n\nDo you wish to continue?\n\nMore information about this script can be found here https://github.com/Sycnex/Windows10Debloater</value>
  </data>
  <data name="infoUninstallNull" xml:space="preserve">
    <value>No apps to uninstall!</value>
  </data>
  <data name="LblHeader" xml:space="preserve">
    <value>Apps &amp;&amp; Features</value>
  </data>
  <data name="LblInstalledCount" xml:space="preserve">
    <value>Apps</value>
  </data>
  <data name="LblLeftAppName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LblRemoveCount" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="LblRightAppName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LblRightInfo" xml:space="preserve">
    <value>Move the apps you want to uninstall here.</value>
  </data>
  <data name="LnkHeader" xml:space="preserve">
    <value>Optional features (download the Community version)</value>
  </data>
  <data name="LnkStartFresh" xml:space="preserve">
    <value>Start fresh if your Windows 10 is loaded with bloatware</value>
  </data>
  <data name="menuCheckRelease" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="menuInfoApp" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="menuMarketplace" xml:space="preserve">
    <value>Visit Marketplace</value>
  </data>
  <data name="menuPS" xml:space="preserve">
    <value>Add more features...</value>
  </data>
  <data name="menuRepository" xml:space="preserve">
    <value>github/bloatbox</value>
  </data>
  <data name="msgDoPS" xml:space="preserve">
    <value>Do you really want to run this script?</value>
  </data>
  <data name="msgShowUWPSystem" xml:space="preserve">
    <value>Be picky about which System applications to uninstall.\n\nYou can uninstall most of the built-in apps, even ones that don't normally offer an "Uninstall" option.\n\nNote, however, Bloatbox won't allow you to remove a few of the most important built-in apps, like Microsoft Edge, .NET framework, UI.Xaml etc. as these apps are needed for the Windows 10 "Experience" and for other programs. If you try, you’ll see an error message saying the removal failed.</value>
  </data>
  <data name="msgStartFresh" xml:space="preserve">
    <value>This will add all the annoying bloatware apps, pre-installed on Windows 10 including some apps your PC manufacturer included to the removal list.\r\n\nMost of these apps are garbage, but if you find important stuff on the list just remove it from the right box before hitting "Uninstall".</value>
  </data>
  <data name="msgWarning" xml:space="preserve">
    <value>Disclaimer</value>
  </data>
  <data name="releaseUnofficial" xml:space="preserve">
    <value>You are using an unoffical version of Bloatbox</value>
  </data>
  <data name="releaseUpdateAvailable" xml:space="preserve">
    <value>There is a new version available</value>
  </data>
  <data name="releaseUpdateAvailableURL" xml:space="preserve">
    <value>\n\nDo you want to open the @github/releases page?</value>
  </data>
  <data name="releaseUpdateYourVersion" xml:space="preserve">
    <value>\n\nYour are using version</value>
  </data>
  <data name="releaseUpToDate" xml:space="preserve">
    <value>There are currently no updates available.</value>
  </data>
  <data name="statusDoUninstall" xml:space="preserve">
    <value>Removing</value>
  </data>
  <data name="statusFailedRemove" xml:space="preserve">
    <value>Failed to remove:</value>
  </data>
  <data name="statusSuccessRemove" xml:space="preserve">
    <value>Successfully removed:</value>
  </data>
</root>